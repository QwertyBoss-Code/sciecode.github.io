(function(){function Ha(){var b={},c={};W.material.color.getHSL(b);(new THREE.Color(d.color1)).getHSL(c);W.material.color.setHSL(c.h+.045,b.s,b.l)}function Ia(b,c,a){return 1>(b/=.5)?a/2*b*b*b*b+c:-a/2*((b-=2)*b*b*b-2)+c}function eb(b,c){Ja=b;I=c;Ka=document.getElementsByTagName("BODY")[0];document.getElementById("noticeText");p=document.getElementsByClassName("qualities");ja=document.getElementById("quality_list");X=document.getElementById("quality_value");La=document.querySelector(".caret");M=document.getElementsByClassName("settings_items");
Ma=document.getElementById("settings_menu");Na=document.getElementById("mb_value");ka=document.getElementById("color1_slider");la=document.getElementById("color2_slider");ma=document.getElementById("ela_slider");na=document.getElementById("vis_slider");oa=document.getElementById("rad_slider");J=document.getElementById("ball_sphere_inside");pa=document.getElementById("brand");Oa=document.getElementById("overlay");Pa=document.getElementById("fluid_ball");Qa=document.getElementById("st_btn");J.style.transform=
"scale("+d.radius/50;oa.addEventListener("mousemove",function(){d.radius=this.value;J=document.getElementById("ball_sphere_inside");J.style.transform="scale("+d.radius/50;var a=document.getElementById("rad_value");a.innerHTML=this.value;a=document.getElementById("rad_title_value");a.innerHTML=this.value},!1);oa.addEventListener("touchmove",function(){d.radius=this.value;J=document.getElementById("ball_sphere_inside");J.style.transform="scale("+d.radius/50;var a=document.getElementById("rad_value");
a.innerHTML=this.value;a=document.getElementById("rad_title_value");a.innerHTML=this.value},!1);na.addEventListener("mousemove",function(){d.viscosity=this.value/100;var a=document.getElementById("vis_value");a.innerHTML=this.value;a=document.getElementById("vis_title_value");a.innerHTML=this.value;a=document.getElementById("fluid_box");a.style.background="rgba(78, 177, "+(219-140*d.viscosity/.3)+","+(.2+.2*d.viscosity/.3)+")";a.style.border="2px solid rgba(78, 177, "+(219-140*d.viscosity/.3)+", 1)"},
!1);na.addEventListener("touchmove",function(){d.viscosity=this.value/100;var a=document.getElementById("vis_value");a.innerHTML=this.value;a=document.getElementById("vis_title_value");a.innerHTML=this.value;a=document.getElementById("fluid_box");a.style.background="rgba(78, 177, "+(219-140*d.viscosity/.3)+","+(.2+.2*d.viscosity/.3)+")";a.style.border="2px solid rgba(78, 177, "+(219-140*d.viscosity/.3)+", 1)"},!1);ma.addEventListener("mousemove",function(){d.elasticity=this.value/1E3;var a=document.getElementById("ela_value");
a.innerHTML=this.value;a=document.getElementById("ela_title_value");a.innerHTML=this.value},!1);ma.addEventListener("touchmove",function(){d.elasticity=this.value/1E3;var a=document.getElementById("ela_value");a.innerHTML=this.value;a=document.getElementById("ela_title_value");a.innerHTML=this.value},!1);ka.addEventListener("mousemove",function(){var a=new THREE.Color("hsl("+this.value+",  73%, 46%)");Ha();var b="#"+a.getHexString();d.color1=b;b=document.getElementById("color1_value");b.style.background=
"#"+a.getHexString();b=document.getElementById("color1_box");b.style.background="#"+a.getHexString()},!1);ka.addEventListener("touchmove",function(){var a=new THREE.Color("hsl("+this.value+",  73%, 46%)");Ha();var b="#"+a.getHexString();d.color1=b;b=document.getElementById("color1_value");b.style.background="#"+a.getHexString();b=document.getElementById("color1_box");b.style.background="#"+a.getHexString()},!1);la.addEventListener("mousemove",function(){var a=new THREE.Color("hsl("+this.value+",  73%, 46%)"),
b="#"+a.getHexString();d.color2=b;b=document.getElementById("color2_value");b.style.background="#"+a.getHexString();b=document.getElementById("color2_box");b.style.background="#"+a.getHexString()},!1);la.addEventListener("touchmove",function(){var a=new THREE.Color("hsl("+this.value+",  73%, 46%)"),b="#"+a.getHexString();d.color2=b;b=document.getElementById("color2_value");b.style.background="#"+a.getHexString();b=document.getElementById("color2_box");b.style.background="#"+a.getHexString()},!1);
Qa.addEventListener("click",function(){document.body.classList.remove("starting");document.body.classList.add("active");pa.classList.remove("nodelay");pa.classList.remove("brandInit");Oa.classList.add("invisible");Ra=!0;qa=Date.now();Y=0},!1);Na.addEventListener("click",function(){d.motionBlur=!d.motionBlur;var a=document.getElementById("motion_blur_title_value");this.classList.toggle("disabled");a.classList.toggle("disabled");d.motionBlur?(this.innerHTML="Enabled",a.innerHTML="Enabled"):(this.innerHTML=
"Disabled",a.innerHTML="Disabled")},!1);Ma.addEventListener("click",function(){this.classList.toggle("menu_active");document.getElementById("settings").classList.toggle("final_settings")},!1);for(b=0;b<M.length;b++)M[b].addEventListener("click",function(){for(var a=0;a<M.length;a++)M[a].classList.remove("selected_item");this.classList.add("selected_item")},!1);for(b=0;b<p.length;b++)p[b].addEventListener("click",function(a){a.preventDefault();if(this.dataset.quality!=d.quality){for(a=0;a<p.length;a++)p[a].classList.remove("selected"),
p[a].classList.remove("recommended");this.classList.add("selected");ja.classList.remove("vis");X.classList.remove("vis");X.innerHTML=this.innerHTML+' <span class="pn">'+65*Math.pow(2,this.dataset.quality)+'k</span><span class="caret"></span>';if(a=this.dataset.quality)d.quality=a;0==d.quality&&(d.useShadow=!1,d.TEXTURE_WIDTH=256,d.TEXTURE_HEIGHT=256,d.sizeRatio=1.89);1==d.quality&&(d.useShadow=!1,d.TEXTURE_WIDTH=256,d.TEXTURE_HEIGHT=512,d.sizeRatio=1.46);2==d.quality&&(d.useShadow=!0,d.TEXTURE_WIDTH=
512,d.TEXTURE_HEIGHT=512,d.sizeRatio=1.32);3==d.quality&&(d.useShadow=!0,d.TEXTURE_WIDTH=512,d.TEXTURE_HEIGHT=1024,d.sizeRatio=1.1);d.restart=!0}},!1),p[b].addEventListener("transitionend",function(){var a=this;setTimeout(function(){a.classList.remove("recommended")},800)},!1);X.addEventListener("click",function(){ja.classList.toggle("vis");this.classList.toggle("vis");La.classList.toggle("vis")},!1);Ka.classList.remove("hid");d.mobile?p[0].click():p[2].click()}function fb(b){x.x=b.pageX/window.innerWidth*
2-1;x.y=2*-(b.pageY/window.innerHeight)+1}function gb(b){1===b.touches.length&&(x.x=b.touches[0].pageX/window.innerWidth*2-1,x.y=2*-(b.touches[0].pageY/window.innerHeight)+1)}function hb(b){1===b.touches.length&&(x.x=b.touches[0].pageX/window.innerWidth*2-1,x.y=2*-(b.touches[0].pageY/window.innerHeight)+1)}function B(b,c,a,d){return b[0]*c+b[1]*a+b[2]*d}function ra(b){return b*b*b*(b*(6*b-15)+10)}function Sa(b,c){Ta=c;document.addEventListener("mousemove",fb,!1);document.addEventListener("touchstart",
gb,!1);document.addEventListener("touchmove",hb,!1);l=d.TEXTURE_WIDTH;f=d.TEXTURE_HEIGHT;N=l*f;F=b;O=new THREE.Scene;P=new THREE.Camera;P.position.z=1;C=new Float32Array(4*N);for(b=0;b<l;b++)for(c=0;c<f;c++)C[b*f*4+4*c]=THREE.Math.randFloat(-1,1),C[b*f*4+4*c+1]=THREE.Math.randFloat(-1,1),C[b*f*4+4*c+2]=THREE.Math.randFloat(-1,1);b={};b.texture=new THREE.DataTexture(C,f,l,THREE.RGBAFormat,THREE.FloatType);b.texture.minFilter=THREE.NearestFilter;b.texture.magFilter=THREE.NearestFilter;b.texture.needsUpdate=
!0;b.texture.generateMipmaps=!1;b.texture.flipY=!1;Ua=b;b=new Float32Array(4*N);for(c=0;c<l;c++)for(var a=0;a<f;a++)b[c*f*4+4*a]=110-c/l*220,b[c*f*4+4*a+1]=0,b[c*f*4+4*a+2]=110-a/f*220;c={};c.texture=new THREE.DataTexture(b,f,l,THREE.RGBAFormat,THREE.FloatType);c.texture.minFilter=THREE.NearestFilter;c.texture.magFilter=THREE.NearestFilter;c.texture.needsUpdate=!0;c.texture.generateMipmaps=!1;c.texture.flipY=!1;Z=c;aa=new THREE.ShaderMaterial({uniforms:{resolution:{type:"v2",value:new THREE.Vector2(f,
l)},texture:{type:"t",value:Q}},precision:d.precision,vertexShader:"\n\nvoid main() {\n    gl_Position = vec4( position, 1.0 );\n}\n",fragmentShader:"\n\nuniform vec2 resolution;\nuniform sampler2D texture;\n\nvoid main() {\n    vec2 uv = gl_FragCoord.xy / resolution.xy;\n    gl_FragColor = texture2D( texture, uv );\n}\n"});ba=new THREE.ShaderMaterial({uniforms:{resolution:{type:"v2",value:new THREE.Vector2(f,l)},texturePosition:{type:"t",value:Q},textureVelocity:{type:"t",value:Q}},precision:d.precision,
vertexShader:"\n\nvoid main() {\n    gl_Position = vec4( position, 1.0 );\n}\n",fragmentShader:"\n\nuniform vec2 resolution;\nuniform sampler2D texturePosition;\nuniform sampler2D textureVelocity;\n\n#define PI 3.1415926535897932384626433832795\nvoid main() {\n\n    vec2 uv = gl_FragCoord.xy / resolution.xy;\n\n    vec3 pos = texture2D( texturePosition, uv ).xyz;\n    vec3 vel = texture2D( textureVelocity, uv ).xyz;\n\t\tfloat life = texture2D( textureVelocity, uv ).w;\n\n    pos += vel;\n\n    gl_FragColor = vec4( pos, life );\n}\n",
blending:THREE.NoBlending,transparent:!1,depthWrite:!1,depthTest:!1});y=new THREE.ShaderMaterial({uniforms:{resolution:{type:"v2",value:new THREE.Vector2(f,l)},textureRandom:{type:"t",value:Ua.texture},texturePosition:{type:"t",value:Q},textureVelocity:{type:"t",value:Q},mousePosition:{type:"v3",value:new THREE.Vector3(0,0,0)},mousePrev:{type:"v3",value:new THREE.Vector3(0,0,0)},mouseVelocity:{type:"v3",value:new THREE.Vector3(0,0,0)},mouseRadius:{type:"f",value:d.radius},viscosity:{type:"f",value:d.viscosity},
elasticity:{type:"f",value:d.elasticity},defaultPosition:{type:"t",value:Z.texture},dim:{type:"f",value:220},time:{type:"f",value:0}},precision:d.precision,vertexShader:"\n\nvoid main() {\n    gl_Position = vec4( position, 1.0 );\n}\n",fragmentShader:"\n\nuniform vec2 resolution;\nuniform sampler2D textureRandom;\nuniform sampler2D texturePosition;\nuniform sampler2D textureVelocity;\nuniform sampler2D defaultPosition;\nuniform vec3 mousePosition;\nuniform vec3 mousePrev;\nuniform vec3 mouseVelocity;\nuniform float mouseRadius;\nuniform float viscosity;\nuniform float elasticity;\nuniform float dim;\nuniform float time;\n\n#define PI 3.1415926535897932384626433832795\n\n//\tClassic Perlin 3D Noise\n//\tby Stefan Gustavson\nvec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\nvec3 fade(vec3 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\n\nfloat cnoise(vec3 P){\n  vec3 Pi0 = floor(P); // Integer part for indexing\n  vec3 Pi1 = Pi0 + vec3(1.0); // Integer part + 1\n  Pi0 = mod(Pi0, 289.0);\n  Pi1 = mod(Pi1, 289.0);\n  vec3 Pf0 = fract(P); // Fractional part for interpolation\n  vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = Pi0.zzzz;\n  vec4 iz1 = Pi1.zzzz;\n\n  vec4 ixy = permute(permute(ix) + iy);\n  vec4 ixy0 = permute(ixy + iz0);\n  vec4 ixy1 = permute(ixy + iz1);\n\n  vec4 gx0 = ixy0 / 7.0;\n  vec4 gy0 = fract(floor(gx0) / 7.0) - 0.5;\n  gx0 = fract(gx0);\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n  vec4 sz0 = step(gz0, vec4(0.0));\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n  vec4 gx1 = ixy1 / 7.0;\n  vec4 gy1 = fract(floor(gx1) / 7.0) - 0.5;\n  gx1 = fract(gx1);\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n  vec4 sz1 = step(gz1, vec4(0.0));\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n  vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n  g000 *= norm0.x;\n  g010 *= norm0.y;\n  g100 *= norm0.z;\n  g110 *= norm0.w;\n  vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n  g001 *= norm1.x;\n  g011 *= norm1.y;\n  g101 *= norm1.z;\n  g111 *= norm1.w;\n\n  float n000 = dot(g000, Pf0);\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n  float n111 = dot(g111, Pf1);\n\n  vec3 fade_xyz = fade(Pf0);\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x);\n  return 2.2 * n_xyz;\n}\n\nvec2 distToSegment( vec3 x1, vec3 x2, vec3 x0 ) {\n    vec3 v = x2 - x1;\n    vec3 w = x0 - x1;\n\n    float c1 = dot(w,v);\n    float c2 = dot(v,v);\n\n    if ( c1 <= 0.0 ) {\n        return vec2( distance( x0, x1 ), 0.0 );\n    }\n    if ( c2 <= c1) {\n        return vec2( distance( x0, x2), 1.0 );\n    }\n\n    float b = c1 / c2;\n    vec3 pb = x1 + b*v;\n    return vec2( distance( x0, pb ), b );\n}\n\nvoid main() {\n\n    vec2 uv = gl_FragCoord.xy / resolution.xy;\n\n    vec3 rand = texture2D( textureRandom, uv ).xyz;\n    vec3 cur = texture2D( texturePosition, uv ).xyz;\n    vec3 pos = texture2D( defaultPosition, uv ).xyz;\n    vec3 vel = texture2D( textureVelocity, uv ).xyz;\n\n    float x = ( dim/2.0 + pos.x ) / dim;\n    float z = ( dim/2.0 + pos.z ) / dim;\n\n    float res = 7.6;\n    pos.x += rand.x*1.0;\n    pos.y = cnoise( vec3(x*res, z*res/2.0, time) ) * 8.0 + rand.y*1.0;\n    pos.z += rand.z*1.0;\n\n    vec3 offset = (pos - cur);\n    vec2 dist = distToSegment(mousePrev, mousePosition, cur) / mouseRadius;\n\n    if ( dist.x <= 1.0 ) {\n        vel += offset*elasticity*1.0 - vel * viscosity;\n        vel += ( normalize( cur - ( mousePrev + ( mousePosition - mousePrev ) * dist.y ) ) * mix( 7.0, 0.1, dist.x ) + rand * 0.02 );\n    }\n    else {\n        vel += offset*elasticity - vel * viscosity;\n    }\n\n    gl_FragColor = vec4( vel, 1.0 );\n}\n",
blending:THREE.NoBlending,transparent:!1,depthWrite:!1,depthTest:!1});R=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2),aa);O.add(R);D=new THREE.WebGLRenderTarget(f,l,{wrapS:THREE.ClampToEdgeWrapping,wrapT:THREE.ClampToEdgeWrapping,minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat,type:d.mobile?THREE.HalfFloatType:THREE.FloatType,depthTest:!1,depthBuffer:!1,stencilBuffer:!1});S=D.clone();b={};b.texture=new THREE.DataTexture(new Float32Array(4*N),f,l,THREE.RGBAFormat,
THREE.FloatType);b.texture.minFilter=THREE.NearestFilter;b.texture.magFilter=THREE.NearestFilter;b.texture.needsUpdate=!0;b.texture.generateMipmaps=!1;b.texture.flipY=!1;ca(b,D);ca(D,S);A=new THREE.WebGLRenderTarget(f,l,{wrapS:THREE.ClampToEdgeWrapping,wrapT:THREE.ClampToEdgeWrapping,minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat,type:d.mobile?THREE.HalfFloatType:THREE.FloatType,depthTest:!1,depthWrite:!1,depthBuffer:!1,stencilBuffer:!1});T=A.clone();b=new Float32Array(4*
N);for(c=0;c<l;c++)for(a=0;a<f;a++){var e=c/l,k=a/f,n=sa;b[c*f*4+4*a]=110-c/l*220+C[c*f*4+4*a];var m=c*f*4+4*a+1;e*=7.6;k=7.6*k/2;var u=Math.floor(e),h=Math.floor(k),z=Math.floor(n);e-=u;k-=h;n-=z;u&=255;h&=255;z&=255;var p=g[u+g[h+g[z+1]]]%12,q=g[u+g[h+1+g[z]]]%12,r=g[u+g[h+1+g[z+1]]]%12,t=g[u+1+g[h+g[z]]]%12,v=g[u+1+g[h+g[z+1]]]%12,w=g[u+1+g[h+1+g[z]]]%12,x=g[u+1+g[h+1+g[z+1]]]%12;u=B(E[g[u+g[h+g[z]]]%12],e,k,n);t=B(E[t],e-1,k,n);q=B(E[q],e,k-1,n);w=B(E[w],e-1,k-1,n);p=B(E[p],e,k,n-1);v=B(E[v],
e-1,k,n-1);r=B(E[r],e,k-1,n-1);x=B(E[x],e-1,k-1,n-1);e=ra(e);k=ra(k);n=ra(n);b[m]=8*((1-n)*((1-k)*((1-e)*u+e*t)+k*((1-e)*q+e*w))+n*((1-k)*((1-e)*p+e*v)+k*((1-e)*r+e*x)))+1*C[c*f*4+4*a+1];b[c*f*4+4*a+2]=110-a/f*220+C[c*f*4+4*a+2]}c={};c.texture=new THREE.DataTexture(b,f,l,THREE.RGBAFormat,THREE.FloatType);c.texture.minFilter=THREE.NearestFilter;c.texture.magFilter=THREE.NearestFilter;c.texture.needsUpdate=!0;c.texture.generateMipmaps=!1;c.texture.flipY=!1;ca(c,A);ca(A,T)}function ca(b,c){R.material=
aa;aa.uniforms.texture.value=b.texture;F.setRenderTarget(c);F.render(O,P)}function Va(b){Wa=b;ta=d.TEXTURE_WIDTH;U=d.TEXTURE_HEIGHT;ua=ta*U;q=new THREE.ShaderMaterial({uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.shadowmap,THREE.UniformsLib.lights,{textureDefaultPosition:{type:"t",value:Z},texturePosition:{type:"t",value:null},dim:{type:"f",value:0},sizeRatio:{type:"f",value:0},lightPos:{type:"v3",value:r.position},color1:{type:"c",value:Xa},color2:{type:"c",value:Xa},camera:{type:"v3",value:new THREE.Vector3},
befEnlargementNear:{type:"f",value:34},befEnlargementFar:{type:"f",value:129},befEnlargementFactor:{type:"f",value:5.2},aftEnlargementNear:{type:"f",value:34},aftEnlargementFar:{type:"f",value:129},aftEnlargementFactor:{type:"f",value:1.8},befOpacityNear:{type:"f",value:0},befOpacityFar:{type:"f",value:79},befOpacityBase:{type:"f",value:.35},aftOpacityNear:{type:"f",value:0},aftOpacityFar:{type:"f",value:79},aftOpacityBase:{type:"f",value:.35}}]),defines:{USE_SHADOW:d.useShadow},precision:d.precision,
vertexShader:"\n\nuniform sampler2D textureDefaultPosition;\nuniform sampler2D texturePosition;\nuniform float sizeRatio;\nuniform float dim;\nuniform vec3 camera;\n\nuniform float befEnlargementNear;\nuniform float befEnlargementFar;\nuniform float befEnlargementFactor;\n\nuniform float aftEnlargementNear;\nuniform float aftEnlargementFar;\nuniform float aftEnlargementFactor;\n\nuniform float befOpacityNear;\nuniform float befOpacityFar;\nuniform float befOpacityBase;\n\nuniform float aftOpacityNear;\nuniform float aftOpacityFar;\nuniform float aftOpacityBase;\n\n\nvarying float ratio;\nvarying float vAlpha;\nvarying vec2 focalDirection;\nvarying vec3 vNormal;\nvarying vec3 pos;\n\n#include <common>\n#ifdef USE_SHADOW\n\t#include <shadowmap_pars_vertex>\n#endif\n\nfloat diameter;\n\nvoid main() {\n\n    vec3 def = texture2D( textureDefaultPosition, position.xy ).xyz;\n    pos = texture2D( texturePosition, position.xy ).xyz;\n\n    vNormal = pos - def;\n\n    float zRatio = (pos.z + dim/2.0 ) / dim;\n\n    ratio = zRatio;\n\n    vec4 worldPosition = modelMatrix * vec4( pos, 1.0 );\n    vec4 mvPosition = viewMatrix * worldPosition;\n\n    float focalLength = length(camera);\n\t\tfloat dist = focalLength + mvPosition.z;\n\n\t\tfloat size = pow(abs(sizeRatio*1.5), 1.2);\n\n    float aftEnlargementMax =  130.0 + ( (focalLength-150.0)/100.00 * 60.0);\n    float befEnlargementMax =  130.0 + ( (focalLength-150.0)/100.00 * 60.0);\n\n\t\tif ( dist < 0.0 ) {\n\t\t\tdiameter = size*( 1.0 + aftEnlargementFactor*smoothstep(aftEnlargementNear, aftEnlargementMax, abs(dist) ) );\n\t\t\tvAlpha = aftOpacityBase + (1.0 - aftOpacityBase)*(1.0 - smoothstep(aftOpacityNear, aftOpacityFar, abs(dist) ) );\n\t\t}\n\t\telse {\n\t\t\tdiameter = size*( 1.0 + befEnlargementFactor*smoothstep(befEnlargementNear, befEnlargementMax, abs(dist) ) );\n\t\t\tvAlpha = befOpacityBase + (1.0 - befOpacityBase)*(1.0 - smoothstep(befOpacityNear, befOpacityFar, abs(dist) ) );\n\t\t}\n\n    gl_PointSize = ( 1.27 - 0.3 * clamp( length(mvPosition.xyz) / 600.0 , 0.0, 1.0 ) ) * diameter;\n\n    gl_Position = projectionMatrix * mvPosition;\n    focalDirection = (gl_Position.xyz / gl_Position.w).xy;\n\n\t\t#ifdef USE_SHADOW\n    \t#include <shadowmap_vertex>\n\t\t#endif\n}\n",
fragmentShader:"\n\n#include <common>\n#include <packing>\n#include <bsdfs>\n\n#ifdef USE_SHADOW\n\t#include <lights_pars_begin>\n\t#include <shadowmap_pars_fragment>\n\t#include <shadowmask_pars_fragment>\n#endif\n\nuniform vec3 lightPos;\nuniform vec3 color1;\nuniform vec3 color2;\n\nvarying float ratio;\nvarying float vAlpha;\nvarying vec2 focalDirection;\nvarying vec3 vNormal;\nvarying vec3 pos;\n\nvoid main() {\n\n\tvec2 toCenter = (gl_PointCoord.xy - 0.5) * 2.0;\n\tfloat len = length(toCenter);\n\tif (len > 0.8) discard;\n\n  vec3 outgoingLight = mix(color2, color1, mix(0.0, 1.0, ratio))*1.0;\n  vec3 light = normalize(lightPos-pos);\n\n  float luminosity = smoothstep(0.2,1.0,(max( 0.0, dot( vNormal, vec3(0.0,1.0,0.0)) ) ) );\n  outgoingLight *= 0.15 + luminosity*0.1;\n\n  luminosity = smoothstep(0.88,1.0,(max( 0.0, dot( vec3(0.0,1.0,0.0), light) ) ) );\n  outgoingLight *= 0.25 + luminosity*0.75;\n\n\t#ifdef USE_SHADOW\n    float shadow = smoothstep(0.0, 0.2, getShadowMask());\n\t\toutgoingLight *= 0.65 + shadow*0.35;\n\t#endif\n\n  float alpha = vAlpha;\n\n  gl_FragColor = vec4( outgoingLight , 1.0 );\n\n}\n",
lights:!0,transparent:!0,blending:THREE.AdditiveBlending,depthTest:!1,depthWrite:!1});va=new THREE.Color(d.color1);wa=new THREE.Color(d.color2);q.uniforms.color1.value=va;q.uniforms.color2.value=wa;q.uniforms.dim.value=220;q.uniforms.sizeRatio.value=d.sizeRatio;xa=new THREE.ShaderMaterial({uniforms:{lightPos:{type:"v3",value:r.position},texturePosition:{type:"t",value:null}},precision:d.precision,vertexShader:"\n\nuniform sampler2D texturePosition;\n\nvarying vec4 vWorldPosition;\n\nvoid main() {\n\n\tvec3 pos = texture2D( texturePosition, position.xy ).xyz;\n\n    vec4 worldPosition = modelMatrix * vec4( pos.xyz, 1.0 );\n    vec4 mvPosition = viewMatrix * worldPosition;\n\n    gl_PointSize = 1.0;\n\n    vWorldPosition = worldPosition;\n\n    gl_Position = projectionMatrix * mvPosition;\n\n}\n",
fragmentShader:"\n\nuniform vec3 lightPos;\nvarying vec4 vWorldPosition;\n\n#include <common>\n\nvec4 pack1K ( float depth ) {\n\n   depth /= 1000.0;\n   const vec4 bitSh = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\n   const vec4 bitMsk = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\n   vec4 res = fract( depth * bitSh );\n   res -= res.xxyz * bitMsk;\n   return res;\n\n}\n\nvoid main () {\n\n   gl_FragColor = pack1K( length( vWorldPosition.xyz - lightPos.xyz ) );\n\n}\n",depthTest:!1,
depthWrite:!1,side:THREE.BackSide,blending:THREE.NoBlending});b=new Float32Array(3*ua);for(var c=0;c<ua;c++)ya=3*c,b[ya+0]=~~(c/U)/ta,b[ya+1]=c%U/U;c=new THREE.BufferGeometry;c.addAttribute("position",new THREE.BufferAttribute(b,3));G=new THREE.Points(c,q);G.customDistanceMaterial=xa;G.castShadow=!0;G.receiveShadow=!0}function Ya(){d.restart&&(v.remove(G),d.restart=!1,Sa(m,h),Va(h),v.add(G));requestAnimationFrame(Ya);var b;if(Ra&&!Za)if(3500>Y){za=Date.now();var c=za-qa;qa=za;Y+=c;var a=b=Y/3500;
c=1>(a/=.5)?65*a*a*a*a*a:65*((a-=2)*a*a*a*a+2);a=Ia(b,200,-90);b=Ia(b,0,-110);Ja.position.set(c,a,b)}else{Za=!0;I.enableZoom=!0;I.enableRotate=!0;I.maxPolarAngle=1.8*Math.PI/5;I.maxDistance=250;I.minDistance=150;b=document.querySelectorAll(".delay");for(c=0;c<b.length;c++)b[c].classList.remove("delay");b=document.querySelectorAll(".inactive");for(c=0;c<b.length;c++)b[c].classList.remove("inactive")}if(130<K||0>K)$a*=-1;ab=35<K&&95>K?1-.6*d.viscosity/.3:1.5;K+=$a*ab;Pa.style.transform="translateX("+
K+"px) translateY(-20px)";H.update();da=Date.now();c=da-bb;bb=da;sa+=Math.min(c/1200,1/8);Aa.copy(ea);cb.setFromCamera(x,Ta);cb.ray.intersectPlane(ib,Ba);null!=Ba&&ea.copy(Ba);Ca.copy(ea.clone().sub(Aa));Ca.y=0;c=D;D=S;S=c;R.material=y;y.uniforms.mouseRadius.value=d.radius;y.uniforms.viscosity.value=d.viscosity;y.uniforms.elasticity.value=d.elasticity;y.uniforms.textureVelocity.value=S.texture;y.uniforms.texturePosition.value=A.texture;y.uniforms.mousePosition.value.copy(ea);y.uniforms.mousePrev.value.copy(Aa);
y.uniforms.mouseVelocity.value.copy(Ca);y.uniforms.time.value=sa;F.setRenderTarget(D);F.render(O,P);c=A;A=T;T=c;R.material=ba;ba.uniforms.textureVelocity.value=D.texture;ba.uniforms.texturePosition.value=T.texture;F.setRenderTarget(A);F.render(O,P);Da=A;va.setStyle(d.color1);wa.setStyle(d.color2);xa.uniforms.texturePosition.value=Da.texture;q.uniforms.texturePosition.value=Da.texture;q.uniforms.textureDefaultPosition.value=Z.texture;q.uniforms.camera.value=Wa.position;d.motionBlur?(L.enabled=!0,V.enabled=
!0):(L.enabled=!1,V.enabled=!1);t.render()}var d={radius:30,viscosity:.12,elasticity:.015,color1:"#2095cc",color2:"#20cc2e",TEXTURE_WIDTH:512,TEXTURE_HEIGHT:512,quality:2,motionBlur:!0,useShadow:!0,sizeRatio:1.32,restart:!1,mobile:null==(new MobileDetect(window.navigator.userAgent)).mobile()?!1:!0,precision:"lowp"},Ea=void 0,Fa=void 0,V=void 0,L=void 0,t=void 0,W=void 0,Ja=void 0,I=void 0,Ka=void 0,Oa=void 0,pa=void 0,J=void 0,Na=void 0,Ma=void 0,p=void 0,ja=void 0,X=void 0,La=void 0,M=void 0,oa=
void 0,na=void 0,ma=void 0,ka=void 0,la=void 0,Pa=void 0,Qa=void 0,Ra=!1,Za=!1,qa=void 0,za=void 0,Y=void 0,K=0,$a=1,ab=1,r=void 0,Ta,x=new THREE.Vector2(1,1),Aa=new THREE.Vector3(999,0,0),Ba=new THREE.Vector3,ea=new THREE.Vector3(999,0,0),Ca=new THREE.Vector3,cb=new THREE.Raycaster,ib=new THREE.Plane(new THREE.Vector3(0,1,0)),Ga=void 0;void 0==Ga&&(Ga=Math);for(var E=[[1,1,0],[-1,1,0],[1,-1,0],[-1,-1,0],[1,0,1],[-1,0,1],[1,0,-1],[-1,0,-1],[0,1,1],[0,-1,1],[0,1,-1],[0,-1,-1]],db=[],w=0;256>w;w++)db[w]=
Math.floor(256*Ga.random());var g=[];for(w=0;512>w;w++)g[w]=db[w&255];var Q,R,O,P,F,aa,ba,y,Da,A,T,D,S,l,f,N,C,da=Date.now(),bb=da,sa=0,Ua,Z,Xa,G,va,wa,Wa,q,xa,ya,ta,U,ua,fa,ha,m,v,h,H,jb=new THREE.Vector3(0,200,-.1),ia=!0;window.onresize=function(){if(ia){fa=window.innerWidth;ha=window.innerHeight;h.aspect=fa/ha;h.updateProjectionMatrix();m.setSize(fa,ha);var b=fa,c=ha;Ea=b;Fa=c;t.setSize(b,c)}};(function(){try{m=new THREE.WebGLRenderer({antialias:!0,failIfMajorPerformanceCaveat:!0})}catch(n){console.error("Atomize \u2022 Hardware Acceleration not enabled or GPU not available."),
ia=!1}if(ia&&WEBGL.isWebGLAvailable()){ia=!0;m.setSize(window.innerWidth,window.innerHeight);m.setPixelRatio(window.devicePixelRatio);m.setClearColor(132102);m.sortObjects=!0;m.shadowMap.type=THREE.PCFSoftShadowMap;m.shadowMap.enabled=!0;document.body.appendChild(m.domElement);v=new THREE.Scene;v.fog=new THREE.FogExp2(132102,.0013);h=new THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight,1,1E4);h.position.copy(jb);H=new THREE.OrbitControls(h,m.domElement);H.enablePan=!1;H.enableZoom=
!1;H.enableRotate=!1;H.update();var b=v,c=h,a=window.innerWidth,e=window.innerHeight;t=new THREE.EffectComposer(m);t.setSize(a,e);Ea=a;Fa=e;b=new THREE.RenderPass(b,c);V=new THREE.SavePass(new THREE.WebGLRenderTarget(Ea,Fa,{minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBFormat,stencilBuffer:!1}));L=new THREE.ShaderPass(THREE.BlendShader,"tDiffuse1");L.uniforms.tDiffuse2.value=V.renderTarget.texture;L.uniforms.mixRatio.value=.25;a=new THREE.UnrealBloomPass(new THREE.Vector2(a,
e),.2,0,.19);e=new THREE.ShaderPass(THREE.CopyShader);e.renderToScreen=!0;t.addPass(b);t.addPass(L);t.addPass(V);t.addPass(a);t.addPass(e);r=new THREE.Object3D;r.position.set(0,190,0);a=new THREE.AmbientLight(3355443);r.add(a);a=new THREE.DirectionalLight(12225419,.5);a.position.set(1,1,1);r.add(a);a=new THREE.DirectionalLight(9157300,.3);a.position.set(1,1,-1);r.add(a);a=new THREE.PointLight(10066329,1,1600);a.castShadow=!0;a.shadow.camera.near=10;a.shadow.camera.far=1500;a.shadow.bias=.04;a.shadow.mapSize.width=
2048;a.shadow.mapSize.height=1024;r.add(a);a=new THREE.PlaneGeometry(4E3,4E3,10,10);e=new THREE.MeshStandardMaterial({roughness:.7,metalness:1,dithering:!0,color:1779512,emissive:0});a=W=new THREE.Mesh(a,e);a.rotation.x=-1.57;a.position.y=-55;a.receiveShadow=!0;Sa(m,h);Va(h);v.add(G);v.add(r);v.add(W);eb(h,H);a=m.getContext();e="lowp";0<a.getShaderPrecisionFormat(a.VERTEX_SHADER,a.MEDIUM_FLOAT).precision&&0<a.getShaderPrecisionFormat(a.FRAGMENT_SHADER,a.MEDIUM_FLOAT).precision&&(e="mediump");0<a.getShaderPrecisionFormat(a.VERTEX_SHADER,
a.HIGH_FLOAT).precision&&0<a.getShaderPrecisionFormat(a.FRAGMENT_SHADER,a.HIGH_FLOAT).precision&&(e="highp");d.precision=e;requestAnimationFrame(Ya)}else{console.warn("Atomize \u2022 Initialization aborted.");a=document.getElementById("video-container");e=document.createElement("VIDEO");e.src=".assets/media/loop.mp4";e.loop=!0;e.autoplay=!0;e.muted=!0;a.appendChild(e);a=document.getElementById("intro");e=document.getElementById("st_btn");b=document.getElementById("st_notice");c=document.getElementById("st_steps");
var f=document.getElementsByTagName("BODY")[0];a.classList.add("hidden");e.classList.add("hidden");b.classList.remove("hidden");c.classList.remove("hidden");f.classList.remove("hid")}})()})();